<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.DepartmentRepository">

    <select id="getMunicipalities" resultType="java.lang.String">
        SELECT m.municipality
        FROM locations l,
             municipalities m
        WHERE l.id_municipality = m.id_municipality
          AND l.id_departament = #{idDepartment}
          AND m.id_municipality > 0
    </select>

    <select id="getDataByDepartmentsId" resultType="com.example.demo.dto.DataSimpleDto">
        select b.data    as data,
               b.in_date as inDate,
               d.type    as datatype
        from departaments a,
             data b,
             locations c,
             datatypes d
        where b.id_location = c.id_location
          and a.id_departament = c.id_departament
          and d.id_datatype = b.id_datatype
          and a.id_departament = #{idDepartment}
          and a.id_departament > 0
          and c.id_municipality = 0
    </select>

    <select id="getDepartments" resultType="com.example.demo.domain.Departments">
        SELECT d.id_departament as idDepartment,
               d.department     as department
        FROM departaments d
        WHERE d.id_departament > 0
    </select>

    <select id="departmentStatistics" resultType="com.example.demo.dto.DataDto">
        SELECT SUM(a.data)                           AS data,
               MAX(a.in_date)                        AS inDate,
               a.id_location                         AS idLocation,
               (SELECT c.type
                FROM datatypes c
                WHERE a.id_datatype = c.id_datatype) AS datatype
        FROM data a,
             locations b
        WHERE b.id_location = a.id_location
          AND b.id_departament = #{idDepartment}
          AND b.id_municipality = 0
        GROUP BY a.id_datatype
    </select>

    <select id="generalFirstVaccinated" resultType="com.example.demo.dto.DataDto">
        SELECT a.id_data                             AS idData,
               SUM(a.data)                           AS data,
               MAX(a.in_date)                        AS inDate,
               a.id_location                         AS idLocation,
               (SELECT c.type
                FROM datatypes c
                WHERE a.id_datatype = c.id_datatype) AS datatype
        FROM data a,
             locations b
        WHERE b.id_location = a.id_location
          AND b.id_departament = #{idDepartment}
          AND a.id_datatype = 4
        GROUP BY a.data
        ORDER BY a.data DESC
        LIMIT 1
    </select>

    <select id="generalSecondVaccinated" resultType="com.example.demo.dto.DataDto">
        SELECT a.id_data                             AS idData,
               SUM(a.data)                           AS data,
               MAX(a.in_date)                        AS inDate,
               a.id_location                         AS idLocation,
               (SELECT c.type
                FROM datatypes c
                WHERE a.id_datatype = c.id_datatype) AS datatype
        FROM data a,
             locations b
        WHERE b.id_location = a.id_location
          AND b.id_departament = #{idDepartment}
          AND a.id_datatype = 5
        GROUP BY a.data
        ORDER BY a.data DESC
        LIMIT 1
    </select>

    <select id="listSpecificDataByIdDepartment" resultType="com.example.demo.dto.DataSimpleDto">
        select b.data as data, b.in_date as inDate, a.type as datatype
        from datatypes a,
             data b,
             locations l
        where a.id_datatype = #{idDatatype}
          and l.id_departament = #{idDepartment}
          and l.id_municipality = 0
          and b.id_location = l.id_location
    </select>

    <select id="getDataByDepartmentId" resultType="com.example.demo.dto.DataDto">
        SELECT a.id_data                             AS idData,
               a.data                                AS data,
               a.in_date                             AS inDate,
               a.id_location                         AS idLocation,
               (SELECT c.type
                FROM datatypes c
                WHERE a.id_datatype = c.id_datatype) AS datatype
        FROM data a,
             locations b
        WHERE b.id_location = a.id_location
          AND b.id_departament = #{idDepartment}
          AND b.id_municipality = 0
        ORDER BY inDate, datatype;
    </select>

</mapper>